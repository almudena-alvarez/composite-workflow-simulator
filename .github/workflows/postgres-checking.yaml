name: Karate test

on:
  workflow_call:
  
env:
  master: (first second)

jobs:

  # label of the container job
  postgres-job:
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: postgres_password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres_user
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    
#       - name: Checkout karate repository
#         uses: actions/checkout@v2
#         with:
#           path: karate

      - name: Checkout workflow repo
        uses: actions/checkout@v2
        with:
          repository: almudena-alvarez/composite-workflow-simulator
          ref: main
          path: workflow  
          
      - name: List files in the workspace
        shell: bash
        run: pwd
      
      - name: List files in the workspace
        shell: bash
        run: ls -a /__w/karate-simulator/karate-simulator
          

      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client
      # queries database with postgres client
      
      - name: set ddbb as in oasis
        run: |
          psql -h postgres -d postgres_db -U postgres_user
          ps -ef | grep postgres
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: postgres_password
      
      
      - name: set ddbb as in oasis
        run: |
          psql -h postgres -d postgres_db -U postgres_user -f /__w/karate-simulator/karate-simulator/workflow/scripts/postgres-setup.sql
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: postgres_password
        

      - name: check select with master
        run: |
          sh /__w/karate-simulator/karate-simulator/workflow/scripts/postgres-select.sh
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: postgres_password


#       - name: backup tables
#         shell: bash
#         run: |
#           pwd
#           PGSSLMODE=allow PGPASSWORD='postgres_password' pg_dump \
#           --file ./backup \
#           --host "postgres" \
#           --username "postgres_user" \
#           --verbose \
#           --no-owner \
#           --no-privileges \
#           --format=c \
#           --blobs \
#           --encoding "UTF8" \
#           --table "esq_oasis.first" \
#           "postgres_db"

#       - name: set ddbb as in oasis
#         run: |
#           psql -h postgres -d postgres_db -U postgres_user -f /__w/karate-simulator/karate-simulator/workflow/scripts/postgres-alter.sql
#         env:
#           # postgress password is required; alternatively, you can run:
#           # `PGPASSWORD=postgres_password psql ...`
#           PGPASSWORD: postgres_password

#       - name: dump backup
#         shell: bash
#         run: |
#           pg_restore -h postgres -d postgres_db -U postgres_user -n "esq_oasis" "./backup"

#         env:
#           # postgress password is required; alternatively, you can run:
#           # `PGPASSWORD=postgres_password psql ...`
#           HOST: ${{ secrets.HOST }}
#           DATABASE: ${{ secrets.DATABASE }}
#           POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#           POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#           PORT: ${{secrets.PORT}}

#       - name: setup postgres database
#         run: |
#           PGPASSWORD=$POSTGRES_PASSWORD psql -h $HOST -d $DATABASE -U $POSTGRES_USER -f /__w/karate-simulator/karate-simulator/workflow/scripts/postgres-setup.sql
#         env:
#           # postgress password is required; alternatively, you can run:
#           # `PGPASSWORD=postgres_password psql ...`
#           HOST: ${{ secrets.HOST }}
#           DATABASE: ${{ secrets.DATABASE }}
#           POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#           POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#           PORT: ${{secrets.PORT}}
